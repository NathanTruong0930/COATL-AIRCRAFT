#include <SPI.h>

// ADC pins configuration
#define CS_PIN        34
#define SPI_SCK        5
#define SPI_MOSI      18
#define SPI_MISO      19

// ADG212 gain switch pins
#define GAIN_X4_PIN    14
#define GAIN_X15_PIN   32
#define GAIN_X47_PIN   33

// ADC parameters
#define V_REF          4.096
#define INPUT_RANGE    6   // 3 Ã— V_REF (12.288 V max)

// Voltage thresholds based on direction
#define NEG_X4_MIN_V     5.5
#define NEG_X15_MIN_V    4.8
#define NEG_X47_MIN_V    4.5

#define POS_X4_MAX_V     3.5
#define POS_X15_MAX_V    4.2
#define POS_X47_MAX_V    4.499

int currentGain = 4;
float prevVoltage = 0.0;

void setup() {
  Serial.begin(115200);
  SPI.begin(SPI_SCK, SPI_MISO, SPI_MOSI);
  SPI.beginTransaction(SPISettings(500000, MSBFIRST, SPI_MODE0));

  pinMode(CS_PIN, OUTPUT);
  digitalWrite(CS_PIN, HIGH);

  pinMode(GAIN_X4_PIN, OUTPUT);
  pinMode(GAIN_X15_PIN, OUTPUT);
  pinMode(GAIN_X47_PIN, OUTPUT);

  setGain(4);  // Start with gain x4 as default

  delay(200);
  Serial.println("Dynamic Direction-Based Gain Switching Initialized.");
}

void loop() {
  uint16_t adcRaw = readMAX1032(0, INPUT_RANGE);
  float measuredVoltage = (adcRaw / 16383.0) * (3 * V_REF);
  float actualVoltage = convertToActualVoltage(measuredVoltage, currentGain);

  // Determine charging direction
  bool isNegativeDirection = (actualVoltage < prevVoltage);
  prevVoltage = actualVoltage;

  // Perform dynamic gain switching based on direction
  directionBasedGainSwitch(actualVoltage, isNegativeDirection);

  // Display reading and gain details
  Serial.print("ADC Raw: "); Serial.print(adcRaw);
  Serial.print(" | Measured Voltage: "); Serial.print(measuredVoltage, 4);
  Serial.print(" V | Actual Voltage: "); Serial.print(actualVoltage, 4);
  Serial.print(" V | Gain: x"); Serial.print(currentGain);
  Serial.print(" | Direction: "); Serial.println(isNegativeDirection ? "Negative" : "Positive");

  delay(1000);
}

// Read ADC from MAX1032
uint16_t readMAX1032(uint8_t channel, uint8_t range) {
  digitalWrite(CS_PIN, LOW);
  delayMicroseconds(2);
  uint8_t command = 0b10000000 | (channel << 4) | range;
  SPI.transfer(command);
  delayMicroseconds(10);
  uint8_t highByte = SPI.transfer(0x00);
  uint8_t lowByte = SPI.transfer(0x00);
  digitalWrite(CS_PIN, HIGH);
  return (((highByte << 8) | lowByte) >> 2) & 0x3FFF;
}

// Set Gain (ADG212 control pins)
void setGain(int gain) {
  currentGain = gain;
  digitalWrite(GAIN_X4_PIN, gain == 4 ? HIGH : LOW);
  digitalWrite(GAIN_X15_PIN, gain == 15 ? HIGH : LOW);
  digitalWrite(GAIN_X47_PIN, gain == 47 ? HIGH : LOW);
  Serial.print("Gain switched to x"); Serial.println(gain);
}

// Convert measured ADC voltage to real input voltage based on gain
float convertToActualVoltage(float measuredVoltage, int gain) {
  switch (gain) {
    case 4:
      return measuredVoltage; // scaling factor: 1
    case 15:
      return measuredVoltage / 0.2667; // scaling factor ~3.75 (1/0.2667)
    case 47:
      return measuredVoltage / 0.0851; // scaling factor ~11.75 (1/0.0851)
    default:
      return measuredVoltage;
  }
}

// Dynamic gain switching based on voltage and direction (with hysteresis)
void directionBasedGainSwitch(float voltage, bool negativeDirection) {
  if (negativeDirection) { // Decreasing voltage direction
    if (voltage >= NEG_X4_MIN_V && currentGain != 4)
      setGain(4);
    else if (voltage < NEG_X4_MIN_V && voltage >= NEG_X15_MIN_V && currentGain != 15)
      setGain(15);
    else if (voltage < NEG_X15_MIN_V && voltage >= NEG_X47_MIN_V && currentGain != 47)
      setGain(47);
  } else { // Increasing voltage direction
    if (voltage <= POS_X4_MAX_V && currentGain != 4)
      setGain(4);
    else if (voltage > POS_X4_MAX_V && voltage <= POS_X15_MAX_V && currentGain != 15)
      setGain(15);
    else if (voltage > POS_X15_MAX_V && voltage <= POS_X47_MAX_V && currentGain != 47)
      setGain(47);
  }
}
